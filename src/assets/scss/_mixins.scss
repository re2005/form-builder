@import 'config';

@mixin fs-regular {
    font-family: FiraSans-Regular, sans-serif;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    font-weight: 400;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: normal;
}

@mixin fs-medium {
    font-family: FiraSans-Medium, sans-serif;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    font-weight: 400;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: normal;
}

@mixin fs-italic {
    font-family: FiraSans-Italic, sans-serif;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: normal;
}

@mixin breakpoint-value($value) {
    @media (min-width: $value) {
        @content;
    }
}

@mixin breakpoint-up($class) {
    @if $class==xs {
        @media (min-width: map-get($breakpoints, extraSmall)) {
            @content;
        }
    } @else if $class==sm {
        @media (min-width: map-get($breakpoints, small)) {
            @content;
        }
    } @else if $class==md {
        @media (min-width: map-get($breakpoints, medium)) {
            @content;
        }
    } @else if $class==lg {
        @media (min-width: map-get($breakpoints, large)) {
            @content;
        }
    } @else if $class==xl {
        @media (min-width: map-get($breakpoints, extraLarge)) {
            @content;
        }
    } @else {
        @warn 'Breakpoint mixin supports: xs, sm, md, lg';
    }
}

@mixin breakpoint-down($class) {
    @if $class==xs {
        @media (max-width: map-get($breakpoints, extraSmall) - 1) {
            @content;
        }
    } @else if $class==sm {
        @media (max-width: map-get($breakpoints, small) - 1) {
            @content;
        }
    } @else if $class==md {
        @media (max-width: map-get($breakpoints, medium) - 1) {
            @content;
        }
    } @else if $class==lg {
        @media (max-width: map-get($breakpoints, large) - 1) {
            @content;
        }
    } @else {
        @warn 'Breakpoint mixin supports: xs, sm, md, lg';
    }
}

// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
    // If $fs-font-size is a list, include both font-size and line-height
    @if type-of($fs-font-size) == "list" {
        font-size: nth($fs-font-size, 1);
        @if (length($fs-font-size) > 1) {
            line-height: nth($fs-font-size, 2);
        }
    } @else {
        font-size: $fs-font-size;
    }
}

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
    @each $fs-breakpoint, $fs-font-size in $fs-map {
        @if $fs-breakpoint == default {
            @include make-font-size($fs-font-size);
        } @else {
            // If $fs-font-size is a key that exists in $fs-breakpoints, use the value
            @if map-has-key($fs-breakpoints, $fs-breakpoint) {
                $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
            }
            @media screen and (min-width: $fs-breakpoint) {
                @include make-font-size($fs-font-size);
            }
        }
    }
}

@mixin hidden($mq) {
    @include breakpoint-down($mq) {
        display: none;
    }
}

@mixin visible($display, $mq) {
    display: $display;
    @include breakpoint-up($mq) {
        display: none;
    }
}

@mixin box-shadow($color: $color-gray-100, $opacity: .05) {
    box-shadow: 0 2px 6px 0 rgba($color, $opacity);
}
